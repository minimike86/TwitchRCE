name: CI/CD Workflow

on: [push, pull_request]

env:
  CLIENT_ID: ${{ secrets.CLIENT_ID }}
  CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}

jobs:
  setup:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install poetry
        run: |
          python -m pip install poetry

      - name: Configure poetry
        run: |
          poetry config virtualenvs.in-project true

#      - name: Cache the virtualenv
#        uses: actions/cache@v2
#        with:
#          path: .venv
#          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: |
          poetry install --with dev

      - name: Run isort
        uses: isort/isort-action@master
        with:
          configuration: "--check-only --diff"
          sortPaths: "."

      - name: Run black
        uses: psf/black@stable
        with:
          options: "--check --diff --verbose --color"
          src: "."
          summary: true

  tests:
    name: Test
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install poetry
        run: |
          python -m pip install poetry

      - name: Configure poetry
        run: |
          poetry config virtualenvs.in-project true

      - name: Install dependencies
        run: |
          poetry install --with dev

      - name: Run tests
        run: |
          poetry run pytest
